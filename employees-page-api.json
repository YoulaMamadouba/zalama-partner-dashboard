{
  "page": "Employés",
  "file": "app/dashboard/employes/page.tsx",
  "description": "Spécifications API pour la page de gestion des employés: liste, filtres, pagination, calcul du salaire restant et statistiques.",
  "baseUrl": "https://admin.zalamagn.com/api",
  "endpoints": {
    "list": {
      "method": "GET",
      "path": "/employees",
      "description": "Liste des employés du partenaire avec calcul du salaire restant et filtres.",
      "headers": { "Authorization": "Bearer {token}" },
      "query": {
        "partner_id": "string (UUID) - requis",
        "page": "number (optionnel, défaut: 1)",
        "limit": "number (optionnel, défaut: 8)",
        "search": "string (optionnel) - recherche sur nom, prenom, email, poste",
        "genre": "'Homme' | 'Femme' | 'Autre' (optionnel)",
        "type_contrat": "'CDI' | 'CDD' | 'Consultant' | 'Stage' | 'Autre' (optionnel)",
        "sort": "string (optionnel, défaut: created_at:desc)"
      },
      "response": {
        "success": {
          "employees": [
            {
              "id": "string",
              "partner_id": "string",
              "nom": "string",
              "prenom": "string",
              "genre": "string",
              "email": "string | null",
              "telephone": "string | null",
              "adresse": "string | null",
              "poste": "string",
              "role": "string | null",
              "type_contrat": "string",
              "salaire_net": "number | null",
              "salaire_restant": "number | null",
              "date_embauche": "string (ISO date) | null",
              "actif": "boolean",
              "created_at": "string (ISO date)",
              "updated_at": "string (ISO date)"
            }
          ],
          "pagination": {
            "page": "number",
            "limit": "number",
            "total": "number",
            "totalPages": "number"
          },
          "stats": {
            "total_employees": "number",
            "active_employees": "number",
            "new_this_month": "number",
            "retention_rate": "number"
          }
        },
        "error": { "message": "string" }
      }
    }
  },
  "services": {
    "Supabase": {
      "employees": "SELECT * FROM employees WHERE partner_id = :partner_id ORDER BY created_at DESC",
      "remboursements": "SELECT montant_total_remboursement FROM remboursements WHERE employe_id = :employe_id AND statut = 'PAYE'"
    }
  },
  "backendExpectations": {
    "salaire_restant": "Doit être calculé côté API: salaire_net - SUM(remboursements.PAYE.montant_total_remboursement) pour chaque employé.",
    "filters": "search applique sur (nom, prenom, email, poste); genre et type_contrat sont des égalités exactes.",
    "pagination": "8 éléments par page par défaut.",
    "stats": {
      "total_employees": "count(employees)",
      "active_employees": "count WHERE actif = true",
      "new_this_month": "count WHERE MONTH(date_embauche) = MONTH(NOW) AND YEAR(date_embauche) = YEAR(NOW)",
      "retention_rate": "(active_employees / total_employees) * 100"
    }
  },
  "dataTypes": {
    "Employee": {
      "id": "string (UUID)",
      "partner_id": "string (UUID)",
      "nom": "string",
      "prenom": "string",
      "genre": "'Homme' | 'Femme' | 'Autre'",
      "email": "string (optionnel)",
      "telephone": "string (optionnel)",
      "adresse": "string (optionnel)",
      "poste": "string",
      "role": "string (optionnel)",
      "type_contrat": "'CDI' | 'CDD' | 'Consultant' | 'Stage' | 'Autre'",
      "salaire_net": "number (optionnel)",
      "salaire_restant": "number (optionnel)",
      "date_embauche": "string (ISO date, optionnel)",
      "actif": "boolean",
      "created_at": "string (ISO date)",
      "updated_at": "string (ISO date)"
    }
  },
  "databaseTables": {
    "employees": "Table des employés des partenaires",
    "remboursements": "Table des remboursements (sert au calcul du salaire_restant)"
  },
  "errorCodes": {
    "400": "Bad Request - Données invalides",
    "401": "Unauthorized - Token invalide ou expiré",
    "403": "Forbidden - Accès refusé",
    "404": "Not Found - Ressource non trouvée",
    "422": "Unprocessable Entity - Erreur de validation",
    "500": "Internal Server Error - Erreur serveur"
  }
}
